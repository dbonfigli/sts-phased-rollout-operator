---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: phasedrollouts.sts.plus
spec:
  group: sts.plus
  names:
    kind: PhasedRollout
    listKind: PhasedRolloutList
    plural: phasedrollouts
    singular: phasedrollout
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: target statefulset name
      jsonPath: .spec.targetRef
      name: target-ref
      type: string
    - jsonPath: .status.phase
      name: phase
      type: string
    - jsonPath: .status.rolloutStartTime
      name: rollout-start-time
      type: date
    - jsonPath: .status.rolloutEndTime
      name: rollout-end-time
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PhasedRollout is the Schema for the phasedrollouts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PhasedRolloutSpec defines the desired state of PhasedRollout
            properties:
              check:
                description: Check defines the validation process of a rollout
                properties:
                  initialDelaySeconds:
                    description: Number of seconds to wait before performing cheks
                      after rollout step, after rolled pods are available. This is
                      usefult to set to wait for metrics to settle down. Default is
                      60 seconds, minimum is 0.
                    format: int32
                    minimum: 0
                    type: integer
                  periodSeconds:
                    description: How often (in seconds) to perform the check. Default
                      is 60 seconds, minimum is 0.
                    format: int32
                    minimum: 0
                    type: integer
                  query:
                    description: 'Details on the prmetheus query to perform as check,
                      semantic similar to a prometheus alert: no data means success,
                      if the query returns data it means failure'
                    properties:
                      expr:
                        description: Prometheus expression for the check
                        minLength: 1
                        type: string
                      insecureSkipVerify:
                        description: true will skip tls checks
                        type: boolean
                      secretRef:
                        description: 'Secret reference containing the prometheus credentials
                          for basic authentication or bearer token authentication.
                          The data in the secret can optionally have: username: username
                          to use for basic authentication password: password to use
                          for basic authentication token: token for bearer token authentication'
                        type: string
                      url:
                        description: URL of prometheus endpoint
                        minLength: 1
                        type: string
                    required:
                    - expr
                    - url
                    type: object
                  successThreshold:
                    description: Number of consecutive success checks to consider
                      the rollout step good. Default is 3, minimum is 1.
                    format: int32
                    minimum: 1
                    type: integer
                required:
                - query
                type: object
              standardRollingUpdate:
                description: StandardRollingUpdate stops the phased rollout mechanism
                  and resume the standard RollingUpdate strategy
                type: boolean
              targetRef:
                description: TargetRef references a target resource, i.e. the name
                  of the statefulset this PhasedRollout should manage
                type: string
            required:
            - check
            - targetRef
            type: object
          status:
            description: PhasedRolloutStatus defines the observed state of PhasedRollout
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              phase:
                type: string
              rollingPodStatus:
                properties:
                  analisysStartTime:
                    format: date-time
                    type: string
                  consecutiveFailedChecks:
                    format: int32
                    type: integer
                  consecutiveSuccessfulChecks:
                    format: int32
                    type: integer
                  lastCheckTime:
                    format: date-time
                    type: string
                  partition:
                    format: int32
                    type: integer
                  status:
                    type: string
                  totalFailedChecks:
                    format: int32
                    type: integer
                required:
                - consecutiveFailedChecks
                - consecutiveSuccessfulChecks
                - partition
                - totalFailedChecks
                type: object
              rolloutEndTime:
                format: date-time
                type: string
              rolloutStartTime:
                format: date-time
                type: string
              updateRevision:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
